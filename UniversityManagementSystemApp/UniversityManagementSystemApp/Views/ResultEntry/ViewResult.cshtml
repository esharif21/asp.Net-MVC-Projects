@model IEnumerable<UniversityManagementSystemApp.Models.ViewModel.ViewResultModel>
@{
    ViewBag.Title = "View Result";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <h1>View Result</h1>

        <hr />
        @Html.ValidationSummary(true)

        <div class="row">
            <div class="col-md-5 text-right">
                <label class="label label-success">
                    Student Reg No.
                </label>
            </div>
            <div class="col-md-7">
                @Html.DropDownList("StudentId", null, "[Select Student]", new { @class = "form-control" })
                <div id="StudentSelectionError">

                </div>
            </div>
        </div>
    }
<br/>
<div id="PDFContainer">
    <div class="row"><h3 class="alert alert-success center-block"></h3></div>
    <div class="row">
        <div class="col-md-5">
            <label>
                Name
            </label>
        </div>
        <div class="col-md-7 bg-success img-rounded">
            <div id="Name">

            </div>    
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">
            <label>
                Email
            </label>
        </div>
        <div class="col-md-7 bg-success img-rounded">
            <div id="Email">

            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">
            <label>
                Dept.
            </label>
        </div>
        <div class="col-md-7 bg-success img-rounded">
            <div id="Dept">

            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-10"></div>
        <div class="col-md-2">
            <button class="btn-success right btn-block" id="PdfMakeButton" onclick="javascript:demoFromHTML();"></button>
        </div>
    </div>
    <div id="ViewEnrolledCoursesAndResult">

    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jspdf.debug.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#StudentId").change(function() {
                var optionSelected = $(this).find("option:selected");
                var valueSelected = optionSelected.val();
                if (valueSelected) {
                    $('#PdfMakeButton').text("Make PDF");
                    $('#PDFContainer').slideDown(1000);
                    $('h3').html("Result Sheet for "+optionSelected.text());
                    var json = { studentId: valueSelected };
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetStudentInfo", "EnrollCourse")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(json),
                        dataType: "json",
                        success: function (data) {
                            $("#Name").html(data.Name);
                            $("#Email").html(data.Email);
                            $("#Dept").html(data.Dept);
                            var id = $("#StudentId").val();
                            $("#ViewEnrolledCoursesAndResult").load("/ResultEntry/GetEnrollCourseAndResult", { studentId: id });
                        }
                    });
                } else {
                    $("#StudentSelectionError").show().text("Please select a student.").addClass("btn-danger").fadeOut(4000);
                    $("#Name").val("");
                    $("#Email").val("");
                    $("#Dept").val("");
                    $('h3').text("");
                    $("#PDFContainer").show().fadeOut(4000);
                }
            });
        });
        function demoFromHTML() {
            //$('#PdfMakeButton').hide();
            $('#PdfMakeButton').text("");
            var pdf = new jsPDF('p', 'pt', 'letter');
            // source can be HTML-formatted string, or a reference
            // to an actual DOM element from which the text will be scraped.
            source = $('#PDFContainer')[0];

            // we support special element handlers. Register them with jQuery-style
            // ID selector for either ID or node name. ("#iAmID", "div", "span" etc.)
            // There is no support for any other type of selectors
            // (class, of compound) at this time.
            specialElementHandlers = {
                // element with id of "bypass" - jQuery style selector
                '#bypassme': function (element, renderer) {
                    // true = "handled elsewhere, bypass text extraction"
                    return true;
                }
            };
            margins = {
                top: 10,
                bottom: 10,
                left: 10,
                width: 500,
            };
            // all coords and widths are in jsPDF instance's declared units
            // 'inches' in this case
            pdf.fromHTML(
                source, // HTML string or DOM elem ref.
                margins.left, // x coord
                margins.top, {
                    // y coord
                    'width': margins.width, // max width of content on PDF
                    'elementHandlers': specialElementHandlers
                },
                function (dispose) {
                    // dispose: object with X, Y of the last line add to the PDF
                    //          this allow the insertion of new lines after html
                    pdf.save('ViewResult.pdf');
                }, margins);
        }
    </script>
}
